# Generated by Django 5.0.6 on 2024-07-26 09:18

import django.db.models.deletion
import multiselectfield.db.fields
from django.db import migrations, models


class Migration(migrations.Migration):
    initial = True

    dependencies = []

    operations = [
        migrations.CreateModel(
            name="Class",
            fields=[
                ("class_id", models.IntegerField(primary_key=True, serialize=False)),
                ("class_name", models.CharField(max_length=2000, null=True)),
                (
                    "location",
                    models.CharField(
                        choices=[
                            ("Lab 1", "Lab 1"),
                            ("Lab 2", "Lab 2"),
                            ("Lab 3", "Lab 3"),
                            ("Lab 4", "Lab 4"),
                            ("Lab 5", "Lab 5"),
                            ("Lab 6", "Lab 6"),
                            ("Lab 7", "Lab 7"),
                        ],
                        max_length=10,
                    ),
                ),
                (
                    "week_day",
                    multiselectfield.db.fields.MultiSelectField(
                        choices=[
                            ("Monday", "Monday"),
                            ("Tuesday", "Tuesday"),
                            ("Wednesday", "Wednesday"),
                            ("Thursday", "Thursday"),
                            ("Friday", "Friday"),
                            ("Saturday", "Saturday"),
                            ("Sunday", "Sunday"),
                        ],
                        max_length=2000,
                    ),
                ),
                (
                    "start_time",
                    models.CharField(
                        choices=[
                            ("8:00 AM", "8:00 AM"),
                            ("9:00 AM", "9:00 AM"),
                            ("10:00 AM", "10:00 AM"),
                            ("11:00 AM", "11:00 AM"),
                            ("12:00 PM", "12:00 PM"),
                            ("13:00 PM", "13:00 PM"),
                            ("14:00 PM", "14:00 PM"),
                            ("15:00 PM", "15:00 PM"),
                            ("16:00 PM", "16:00 PM"),
                            ("17:00 PM", "17:00 PM"),
                            ("18:00 PM", "18:00 PM"),
                        ],
                        max_length=10,
                    ),
                ),
                (
                    "end_time",
                    models.CharField(
                        choices=[
                            ("8:00 AM", "8:00 AM"),
                            ("9:00 AM", "9:00 AM"),
                            ("10:00 AM", "10:00 AM"),
                            ("11:00 AM", "11:00 AM"),
                            ("12:00 PM", "12:00 PM"),
                            ("13:00 PM", "13:00 PM"),
                            ("14:00 PM", "14:00 PM"),
                            ("15:00 PM", "15:00 PM"),
                            ("16:00 PM", "16:00 PM"),
                            ("17:00 PM", "17:00 PM"),
                            ("18:00 PM", "18:00 PM"),
                        ],
                        max_length=10,
                    ),
                ),
            ],
        ),
        migrations.CreateModel(
            name="Classroom",
            fields=[
                (
                    "classroom_id",
                    models.IntegerField(primary_key=True, serialize=False),
                ),
                ("classroom_name", models.CharField(max_length=2000, null=True)),
                (
                    "classroom_type",
                    models.CharField(
                        choices=[("Theory", "Theory"), ("Lab", "Lab")],
                        max_length=2000,
                        null=True,
                    ),
                ),
            ],
        ),
        migrations.CreateModel(
            name="Course",
            fields=[
                (
                    "course_id",
                    models.CharField(
                        max_length=1000, primary_key=True, serialize=False
                    ),
                ),
                ("course_name", models.CharField(max_length=1000, null=True)),
                (
                    "course_type",
                    models.CharField(
                        choices=[("Theory", "Theory"), ("Lab", "Lab")],
                        max_length=200,
                        null=True,
                    ),
                ),
                ("credit_hours", models.IntegerField(null=True)),
                ("contact_hours", models.IntegerField(null=True)),
            ],
        ),
        migrations.CreateModel(
            name="Lecturer",
            fields=[
                (
                    "lecturer_id",
                    models.CharField(
                        max_length=2000, primary_key=True, serialize=False
                    ),
                ),
                ("lecturer_name", models.CharField(max_length=2000, null=True)),
                ("working_hours", models.IntegerField(null=True)),
                ("available_hours", models.IntegerField(null=True)),
            ],
        ),
        migrations.CreateModel(
            name="Student",
            fields=[
                (
                    "admission_number",
                    models.CharField(
                        max_length=10, primary_key=True, serialize=False, unique=True
                    ),
                ),
                ("first_name", models.CharField(max_length=100)),
                ("last_name", models.CharField(max_length=100)),
                ("email", models.EmailField(max_length=254)),
                ("course", models.CharField(max_length=2000)),
                ("year_of_study", models.IntegerField()),
            ],
        ),
        migrations.CreateModel(
            name="Activity",
            fields=[
                (
                    "activity_id",
                    models.CharField(
                        max_length=2000, primary_key=True, serialize=False
                    ),
                ),
                (
                    "activity_type",
                    models.CharField(
                        choices=[("Fixed", "Fixed"), ("Replaceable", "Replaceable")],
                        max_length=2000,
                        null=True,
                    ),
                ),
                (
                    "day",
                    models.CharField(
                        choices=[
                            ("Monday", "Monday"),
                            ("Tuesday", "Tuesday"),
                            ("Wednesday", "Wednesday"),
                            ("Thursday", "Thursday"),
                            ("Friday", "Friday"),
                            ("Saturday", "Saturday"),
                            ("Sunday", "Sunday"),
                        ],
                        max_length=20,
                    ),
                ),
                (
                    "start_time",
                    models.CharField(
                        choices=[
                            ("8:00 AM", "8:00 AM"),
                            ("9:00 AM", "9:00 AM"),
                            ("10:00 AM", "10:00 AM"),
                            ("11:00 AM", "11:00 AM"),
                            ("12:00 PM", "12:00 PM"),
                            ("13:00 PM", "13:00 PM"),
                            ("14:00 PM", "14:00 PM"),
                            ("15:00 PM", "15:00 PM"),
                            ("16:00 PM", "16:00 PM"),
                            ("17:00 PM", "17:00 PM"),
                            ("18:00 PM", "18:00 PM"),
                        ],
                        max_length=10,
                    ),
                ),
                (
                    "end_time",
                    models.CharField(
                        choices=[
                            ("8:00 AM", "8:00 AM"),
                            ("9:00 AM", "9:00 AM"),
                            ("10:00 AM", "10:00 AM"),
                            ("11:00 AM", "11:00 AM"),
                            ("12:00 PM", "12:00 PM"),
                            ("13:00 PM", "13:00 PM"),
                            ("14:00 PM", "14:00 PM"),
                            ("15:00 PM", "15:00 PM"),
                            ("16:00 PM", "16:00 PM"),
                            ("17:00 PM", "17:00 PM"),
                            ("18:00 PM", "18:00 PM"),
                        ],
                        max_length=10,
                    ),
                ),
                (
                    "class_id",
                    models.ForeignKey(
                        null=True,
                        on_delete=django.db.models.deletion.CASCADE,
                        to="timetableapp.class",
                    ),
                ),
                (
                    "classroom_id",
                    models.ForeignKey(
                        null=True,
                        on_delete=django.db.models.deletion.CASCADE,
                        to="timetableapp.classroom",
                    ),
                ),
                (
                    "course_id",
                    models.ForeignKey(
                        null=True,
                        on_delete=django.db.models.deletion.CASCADE,
                        to="timetableapp.course",
                    ),
                ),
                (
                    "lecturer_id",
                    models.ForeignKey(
                        null=True,
                        on_delete=django.db.models.deletion.CASCADE,
                        to="timetableapp.lecturer",
                    ),
                ),
            ],
        ),
        migrations.CreateModel(
            name="RequestChange",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("messange", models.CharField(max_length=300)),
                (
                    "lecturer",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        to="timetableapp.lecturer",
                    ),
                ),
            ],
        ),
        migrations.CreateModel(
            name="ClassCourse",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                (
                    "class_id",
                    models.ForeignKey(
                        null=True,
                        on_delete=django.db.models.deletion.CASCADE,
                        to="timetableapp.class",
                    ),
                ),
                (
                    "course_id",
                    models.ForeignKey(
                        null=True,
                        on_delete=django.db.models.deletion.CASCADE,
                        to="timetableapp.course",
                    ),
                ),
                (
                    "lecturer_id",
                    models.ForeignKey(
                        null=True,
                        on_delete=django.db.models.deletion.CASCADE,
                        to="timetableapp.lecturer",
                    ),
                ),
            ],
            options={
                "unique_together": {("class_id", "course_id")},
            },
        ),
        migrations.CreateModel(
            name="SectionClassroom",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                (
                    "class_id",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        to="timetableapp.class",
                    ),
                ),
                (
                    "classroom_id",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        to="timetableapp.classroom",
                    ),
                ),
            ],
            options={
                "unique_together": {("class_id", "classroom_id")},
            },
        ),
    ]
